{"version":3,"sources":["assets/Spinner-3.gif","components/TodoList/TodoList.jsx","services/api.js","components/CurrentUser/CurrentUser.jsx","components/Preloader/Preloader.jsx","App.jsx","index.js"],"names":["module","exports","TodoList","todos","selectedUserById","inputValue","onSearchHandler","selectedUserId","onSelectHandler","selectedValue","className","onChange","e","value","placeholder","selected","map","el","completed","key","id","type","defaultChecked","readOnly","title","userId","onClick","getUser","fetch","then","response","ok","Error","status","statusText","json","res","data","CurrentUser","state","user","a","this","props","setState","prevProps","clearUsers","name","email","phone","React","Component","Preloader","children","isLoading","src","Loader","alt","App","target","selectedFilter","filter","loadTodos","prevState","snapshot","searchResult","filteredTodos","toUpperCase","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5a86dfa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner-3.c0c00338.gif\";","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  selectedUserById,\n  inputValue,\n  onSearchHandler,\n  selectedUserId,\n  onSelectHandler,\n  selectedValue,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <input\n      className=\"searchTodoList\"\n      onChange={e => onSearchHandler(e)}\n      value={inputValue}\n      placeholder=\"Search\"\n    />\n    <select\n      className=\"selectFilter\"\n      onChange={onSelectHandler}\n      selected={selectedValue}\n    >\n      <option value=\"all\">All</option>\n      <option value=\"active\">Active</option>\n      <option value=\"completed\">Completed</option>\n    </select>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(el => (\n          <li\n            className={el.completed\n              ? 'TodoList__item TodoList__item--checked'\n              : 'TodoList__item TodoList__item--unchecked'}\n            key={el.id}\n          >\n            <label>\n              <input type=\"checkbox\" defaultChecked={el.completed} readOnly />\n              <p>{el.title}</p>\n            </label>\n\n            <button\n              className={el.userId === selectedUserId\n                ? 'TodoList__user-button--selected button'\n                : 'TodoList__user-button button'\n              }\n              type=\"button\"\n              onClick={() => selectedUserById(el.userId)}\n            >\n              User&nbsp;\n              {el.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedUserById: PropTypes.func.isRequired,\n  inputValue: PropTypes.string.isRequired,\n  onSearchHandler: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  onSelectHandler: PropTypes.func.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n","export function getAllTodos() {\n  return fetch(`https://mate-api.herokuapp.com/todos`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(res => res.data\n      .filter(el => (el.userId !== null && el.completed !== null)));\n}\n\nexport function getUser(id = '') {\n  return fetch(`https://mate-api.herokuapp.com/users${id}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(res => res.data);\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../services/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  async componentDidMount() {\n    const user = await getUser(`/${this.props.userId}`);\n\n    this.setState(({ user }));\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      const user = await getUser(`/${this.props.userId}`);\n\n      this.setState(({ user }));\n    }\n  }\n\n  render() {\n    const { clearUsers } = this.props;\n    const { user } = this.state;\n\n    return (\n      user\n      && (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          className=\"userDelete-btn\"\n          onClick={clearUsers}\n        >\n          Clear\n        </button>\n      </div>\n      )\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Loader from '../../assets/Spinner-3.gif';\n\nexport const Preloader = ({ children = null, isLoading }) => {\n  if (isLoading) {\n    return (\n      <div className=\"preloader\">\n        <img src={Loader} alt=\"loading...\" />\n      </div>\n    );\n  }\n\n  return children;\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './services/api';\nimport { Preloader } from './components/Preloader/Preloader';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    isLoading: true,\n    inputValue: '',\n    selectedValue: '',\n  };\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    const todos = await this.loadTodos();\n\n    this.setState({ todos });\n  }\n\n  async componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.inputValue !== this.state.inputValue) {\n      const searchResult = await this.loadTodos();\n      const filteredTodos = searchResult\n        .filter(el => el.title.toUpperCase()\n          .search(this.state.inputValue.toUpperCase()) !== -1);\n\n      this.setState({ todos: filteredTodos });\n    }\n\n    if (prevState.selectedValue !== this.state.selectedValue) {\n      const searchResult = await this.loadTodos();\n\n      const filteredTodos = this.selectedFilter(\n        this.state.selectedValue,\n        searchResult,\n      );\n\n      this.setState({ todos: filteredTodos });\n    }\n  }\n\n  selectedUserById = (selectedUserId) => {\n    this.setState({ selectedUserId });\n  }\n\n  clearUsers = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n   onSearchHandler = (e) => {\n     this.setState({ inputValue: e.target.value });\n   }\n\n   onSelectHandler = (e) => {\n     this.setState({ selectedValue: e.target.value });\n   }\n\n   async loadTodos() {\n     const todos = await getAllTodos();\n\n     this.setState({\n       isLoading: false,\n     });\n\n     return todos;\n   }\n\n   selectedFilter = (selectedValue, state) => {\n     switch (selectedValue) {\n       case 'completed':\n         return state.filter(el => el.completed);\n       case 'active':\n         return state.filter(el => !el.completed);\n       default:\n         return state;\n     }\n   }\n\n   render() {\n     const {\n       todos,\n       selectedUserId,\n       isLoading,\n       inputValue,\n       selectedValue,\n     } = this.state;\n\n     return (\n       <div className=\"App\">\n         <div className=\"App__sidebar\">\n           <Preloader isLoading={isLoading} />\n           {!isLoading && (\n           <TodoList\n             todos={todos}\n             selectedUserById={this.selectedUserById}\n             selectedUserId={selectedUserId}\n             inputValue={inputValue}\n             onSearchHandler={this.onSearchHandler}\n             onSelectHandler={this.onSelectHandler}\n             selectedValue={selectedValue}\n           />\n           )}\n           <Preloader />\n         </div>\n\n         <div className=\"App__content\">\n           <div className=\"App__content-container\">\n             {selectedUserId\n               ? (\n                 <CurrentUser\n                   userId={selectedUserId}\n                   clearUsers={this.clearUsers}\n                 />\n               ) : 'No user selected'}\n           </div>\n         </div>\n       </div>\n     );\n   }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}